plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    buildFeatures {
        dataBinding false
        viewBinding true
        buildConfig true
    }

    namespace 'com.xihh.base'
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled true // 是否开启混淆，代码优化
            zipAlignEnabled true// 是否开启字节对齐
            crunchPngs true//是否对 PNG 图片进行压缩处理
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField("Boolean", "LOGGABLE", "false")
        }
        dev {
            minifyEnabled true // 是否开启混淆，代码优化
            zipAlignEnabled true// 是否开启字节对齐
            crunchPngs false//是否对 PNG 图片进行压缩处理
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField("Boolean", "LOGGABLE", "true")
        }
        debug {
            minifyEnabled false // 是否开启混淆，代码优化
            zipAlignEnabled false// 是否开启字节对齐
            crunchPngs false//是否对 PNG 图片进行压缩处理
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField("Boolean", "LOGGABLE", "true")
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {
    //Android基础组件
    api rootProject.ext.depends.androidx_appcompat
    api rootProject.ext.depends.android_material
    //kotlin、lifecycle组件
    api rootProject.ext.depends.ktx_core
    api rootProject.ext.depends.ktx_lifecycle_runtime
    api rootProject.ext.depends.ktx_lifecycle_viewmodel
    api rootProject.ext.depends.kt_stdlib
    api rootProject.ext.depends.kt_reflect
    //网络库
    api rootProject.ext.depends.okhttp
    api rootProject.ext.depends.retrofit
    api rootProject.ext.depends.fastjson
//    api rootProject.ext.depends.httpclient
    //ocr
//    api rootProject.ext.depends.ocr
    //图片处理
//    api rootProject.ext.depends.cv4j

    //测试
    testImplementation rootProject.ext.depends.junit
    androidTestImplementation rootProject.ext.depends.junit_androidx
    androidTestImplementation rootProject.ext.depends.junit_androidx_espresso
}